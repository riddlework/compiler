
FIRST sets:
  arith_exp:   ID INTCON 
  bool_exp:   ID INTCON 
  decl_or_func:   COMMA LPAREN SEMI 
  else_stmt:   kwELSE <epsilon> 
  expr_list:   ID INTCON 
  expr_list_rest:   COMMA <epsilon> 
  fn_call_or_assg_stmt:   LPAREN opASSG 
  formals:   kwINT 
  formals_rest:   COMMA <epsilon> 
  id_list:   ID 
  id_list_rest:   COMMA <epsilon> 
  if_stmt:   kwIF 
  opt_expr_list:   ID INTCON <epsilon> 
  opt_formals:   <epsilon> kwINT 
  opt_stmt_list:   <epsilon> ID kwIF kwRETURN LBRACE SEMI kwWHILE 
  opt_var_decls:   <epsilon> kwINT 
  prog:   <epsilon> kwINT 
  relop:   opEQ opNE opLT opGE opGT 
  return_bdy:   ID INTCON <epsilon> 
  return_stmt:   kwRETURN 
  stmt:   ID kwIF kwRETURN LBRACE SEMI kwWHILE 
  type:   kwINT 
  var_decl:   kwINT 
  while_stmt:   kwWHILE 

FOLLOW sets:
  arith_exp:   opEQ opNE opLT opGE opGT COMMA SEMI RPAREN 
  bool_exp:   RPAREN 
  decl_or_func:   kwINT <EOF> 
  else_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  expr_list:   RPAREN 
  expr_list_rest:   RPAREN 
  fn_call_or_assg_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  formals:   RPAREN 
  formals_rest:   RPAREN 
  id_list:   SEMI 
  id_list_rest:   SEMI 
  if_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  opt_expr_list:   RPAREN 
  opt_formals:   RPAREN 
  opt_stmt_list:   RBRACE 
  opt_var_decls:   ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  prog:   <EOF> 
  relop:   ID INTCON 
  return_bdy:   SEMI 
  return_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  type:   ID 
  var_decl:   kwINT ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
  while_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE 
